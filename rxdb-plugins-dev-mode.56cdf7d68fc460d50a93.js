(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{kwHj:function(e,t,n){"use strict";n.r(t),n.d(t,"checkFieldNameRegex",function(){return b}),n.d(t,"validateFieldsDeep",function(){return y}),n.d(t,"checkSchema",function(){return O}),n.d(t,"RxDBDevModePlugin",function(){return D});var a,o,i,r={UT1:"given name is no string or empty",UT2:"collection- and database-names must match the regex\n    info: if your database-name specifies a folder, the name must contain the slash-char '/' or '\\'",UT3:"replication-direction must either be push or pull or both. But not none",UT4:"given leveldown is no valid adapter",P1:"PouchDB.getBatch: limit must be > 2",QU1:"RxQuery._execOverDatabase(): op not known",QU4:"RxQuery.regex(): You cannot use .regex() on the primary field",QU5:"RxQuery.sort(): does not work because key is not defined in the schema",QU6:"RxQuery.limit(): cannot be called on .findOne()",QU7:"query must be an object",QU8:"query cannot be an array",QU9:"throwIfMissing can only be used in findOne queries",QU10:"result empty and throwIfMissing: true",QU11:"RxQuery: no valid query params given",MQ1:"path must be a string or object",MQ2:"Invalid argument",MQ3:"Invalid sort() argument. Must be a string, object, or array",MQ4:"Invalid argument. Expected instanceof mquery or plain object",MQ5:"method must be used after where() when called with these arguments",MQ6:"Can't mix sort syntaxes. Use either array or object | .sort([['field', 1], ['test', -1]]) | .sort({ field: 1, test: -1 })",MQ7:"Invalid sort value",MQ8:"Can't mix sort syntaxes. Use either array or object",DB1:"RxDocument.prepare(): another instance on this adapter has a different password",DB2:"RxDatabase.collection(): collection-names cannot start with underscore _",DB3:"RxDatabase.collection(): collection already exists. use myDatabase.[collectionName] to get it",DB4:"RxDatabase.collection(): schema is missing",DB5:"RxDatabase.collection(): collection-name not allowed",DB6:"RxDatabase.collection(): another instance created this collection with a different schema. Read this https://pubkey.github.io/rxdb/questions-answers.html#cant-change-the-schema",DB7:"RxDatabase.collection(): schema encrypted but no password given",DB8:"RxDatabase.create(): A RxDatabase with the same name and adapter already exists.\nMake sure to use this combination only once or set ignoreDuplicate to true if you do this intentional",DB9:"RxDatabase.create(): Adapter not added. Use RxDB.plugin(require('pouchdb-adapter-[adaptername]');",DB10:"RxDatabase.create(): To use leveldown-adapters, you have to add the leveldb-plugin. Use RxDB.plugin(require('pouchdb-adapter-leveldb'));",DB11:"RxDatabase.create(): Invalid db-name, folder-paths must not have an ending slash",COL1:"RxDocument.insert() You cannot insert an existing document",COL2:"RxCollection.insert() do not provide ._id when it is not the primary key",COL3:"RxCollection.upsert() does not work without primary",COL4:"RxCollection.atomicUpsert() does not work without primary",COL5:"RxCollection.find() if you want to search by _id, use .findOne(_id)",COL6:"RxCollection.findOne() needs a queryObject or string",COL7:"hook must be a function",COL8:"hooks-when not known",COL9:"RxCollection.addHook() hook-name not known",COL10:"RxCollection .postCreate-hooks cannot be async",COL11:"migrationStrategies must be an object",COL12:"A migrationStrategy is missing or too much",COL13:"migrationStrategy must be a function",COL14:"given static method-name is not a string",COL15:"static method-names cannot start with underscore _",COL16:"given static method is not a function",COL17:"RxCollection.ORM: statics-name not allowed",COL18:"collection-method not allowed because fieldname is in the schema",COL19:"Pouchdb document update conflict",DOC1:"RxDocument.get$ cannot get observable of in-array fields because order cannot be guessed",DOC2:"cannot observe primary path",DOC3:"final fields cannot be observed",DOC4:"RxDocument.get$ cannot observe a non-existed field",DOC5:"RxDocument.populate() cannot populate a non-existed field",DOC6:"RxDocument.populate() cannot populate because path has no ref",DOC7:"RxDocument.populate() ref-collection not in database",DOC8:"RxDocument.set(): primary-key cannot be modified",DOC9:"final fields cannot be modified",DOC10:"RxDocument.set(): cannot set childpath when rootPath not selected",DOC11:"RxDocument.save(): cant save deleted document",DOC12:"RxDocument.save(): error",DOC13:"RxDocument.remove(): Document is already deleted",DOC14:"RxDocument.destroy() does not exist",DOC15:"query cannot be an array",DOC16:"Since version 8.0.0 RxDocument.set() can only be called on temporary RxDocuments",DOC17:"Since version 8.0.0 RxDocument.save() can only be called on non-temporary documents",DM1:"migrate() Migration has already run",DM2:"migration of document failed final document does not match final schema",DM3:"migration already running",AT1:"to use attachments, please define this in your schema",EN1:"password is no string",EN2:"validatePassword: min-length of password not complied",JD1:"You must create the collections before you can import their data",JD2:"RxCollection.importDump(): the imported json relies on a different schema",JD3:"RxCollection.importDump(): json.passwordHash does not match the own",LD1:"RxDocument.allAttachments$ cant use attachments on local documents",LD2:"RxDocument.get(): objPath must be a string",LD3:"RxDocument.get$ cannot get observable of in-array fields because order cannot be guessed",LD4:"cannot observe primary path",LD5:"RxDocument.set() id cannot be modified",LD6:"LocalDocument: Function is not useable on local documents",LD7:"Local document already exists",RC1:"Replication: already added",RC2:"RxCollection.sync() query must be from the same RxCollection",RC3:"RxCollection.sync() Do not use a collection's pouchdb as remote, use the collection instead",RC4:"RxReplicationState.awaitInitialReplication() cannot await inital replication when live: true",RC5:"RxReplicationState.awaitInitialReplication() cannot await inital replication if multiInstance because the replication might run on another instance",SC1:"fieldnames do not match the regex",SC2:"SchemaCheck: name 'item' reserved for array-fields",SC3:"SchemaCheck: fieldname has a ref-array but items-type is not string",SC4:"SchemaCheck: fieldname has a ref but is not type string, [string,null] or array<string>",SC6:"SchemaCheck: primary can only be defined at top-level",SC7:"SchemaCheck: default-values can only be defined at top-level",SC8:"SchemaCheck: first level-fields cannot start with underscore _",SC10:"SchemaCheck: schema defines ._rev, this will be done automatically",SC11:"SchemaCheck: schema needs a number >=0 as version",SC12:"SchemaCheck: primary can only be defined once",SC13:"SchemaCheck: primary is always index, do not declare it as index",SC14:"SchemaCheck: primary is always unique, do not declare it as index",SC15:"SchemaCheck: primary cannot be encrypted",SC16:"SchemaCheck: primary must have type: string",SC17:"SchemaCheck: top-level fieldname is not allowed",SC18:"SchemaCheck: indexes must be an array",SC19:"SchemaCheck: indexes must contain strings or arrays of strings",SC20:"SchemaCheck: indexes.array must contain strings",SC21:"SchemaCheck: given index is not defined in schema",SC22:"SchemaCheck: given indexKey is not type:string",SC23:"SchemaCheck: fieldname is not allowed",SC24:"SchemaCheck: required fields must be set via array. See https://spacetelescope.github.io/understanding-json-schema/reference/object.html#required",SC25:"SchemaCheck: compoundIndexes needs to be specified in the indexes field",SC26:"SchemaCheck: indexes needs to be specified at collection schema level",SC27:"SchemaCheck: encrypted fields need to be specified at collection schema level",SC28:"SchemaCheck: encrypted fields is not defined in the schema",SC29:"SchemaCheck: missing object key 'properties'",DEV1:"dev-mode added multiple times, this is likely because you have mixed up the import from the the plugins/core and the full RxDB",VD1:"Sub-schema not found, does the schemaPath exists in your schema?",VD2:"object does not match schema",IM1:"InMemory: Memory-Adapter must be added. Use RxDB.plugin(require('pouchdb-adapter-memory'));",IM2:"inMemoryCollection.sync(): Do not replicate with the in-memory instance. Replicate with the parent instead",S1:"You cannot create collections after calling RxDatabase.server()"},c=n("boci"),s=n.n(c),l=n("HdDF"),d=n("zaNH"),u=n("Re7d"),h=n("90xe"),m=n("h2kA"),f=new(Object(m.b)(m.a));function p(){if(!i){var e=Object.getOwnPropertyNames(f),t=Object.getOwnPropertyNames(m.a);i=[].concat(e,t,["deleted","synced"])}return i}function b(e){if(""!==e&&"_id"!==e){if(["properties","language"].includes(e))throw Object(l.b)("SC23",{fieldName:e});var t="^[a-zA-Z](?:[[a-zA-Z0-9_]*]?[a-zA-Z0-9])?$",n=new RegExp(t);if(!e.match(n))throw Object(l.b)("SC1",{regex:t,fieldName:e})}}function y(e){return function e(t,n){"object"==typeof t&&Object.keys(t).forEach(function(a){t.properties||function(e,t,n){if("string"!=typeof e||"object"!=typeof t||Array.isArray(t)||b(e),t.hasOwnProperty("item")&&"array"!==t.type)throw Object(l.b)("SC2",{fieldName:e});if(t.hasOwnProperty("required")&&"boolean"==typeof t.required)throw Object(l.b)("SC24",{fieldName:e});if(t.hasOwnProperty("ref"))if(Array.isArray(t.type)){if(t.type.length>2||!t.type.includes("string")||!t.type.includes("null"))throw Object(l.b)("SC4",{fieldName:e})}else switch(t.type){case"string":break;case"array":if(!t.items||!t.items.type||"string"!==t.items.type)throw Object(l.b)("SC3",{fieldName:e});break;default:throw Object(l.b)("SC4",{fieldName:e})}var a=n.split(".").length>=2;if(a){if(t.primary)throw Object(l.b)("SC6",{path:n,primary:t.primary});if(t.default)throw Object(l.b)("SC7",{path:n})}if(!a&&"_"===e.charAt(0)){if("_id"===e&&t.primary)return;throw Object(l.b)("SC8",{fieldName:e})}}(a,t[a],n);var o=n;"properties"!==a&&(o=o+"."+a),e(t[a],o)})}(e,""),!0}function C(e){for(var t=e.split("."),n="",a=0;a<t.length;a+=1)n=n.concat("[]"!==t[a]?".properties.".concat(t[a]):".items");return Object(d.u)(n)}function O(e){if(!e.hasOwnProperty("properties"))throw Object(l.b)("SC29",{schema:e});if(e.properties._rev)throw Object(l.b)("SC10",{schema:e});if(!e.hasOwnProperty("version")||"number"!=typeof e.version||e.version<0)throw Object(l.b)("SC11",{version:e.version});var t;if(y(e),Object.keys(e.properties).forEach(function(n){var a=e.properties[n];if(a.primary){if(t)throw Object(l.b)("SC12",{value:a});if(t=n,a.index)throw Object(l.b)("SC13",{value:a});if(a.unique)throw Object(l.b)("SC14",{value:a});if(a.encrypted)throw Object(l.b)("SC15",{value:a});if("string"!==a.type)throw Object(l.b)("SC16",{value:a})}if(p().includes(n))throw Object(l.b)("SC17",{key:n})}),e.indexes){if(!Array.isArray(e.indexes))throw Object(l.b)("SC18",{indexes:e.indexes});e.indexes.forEach(function(e){if("string"!=typeof e&&!Array.isArray(e))throw Object(l.b)("SC19",{index:e});if(Array.isArray(e))for(var t=0;t<e.length;t+=1)if("string"!=typeof e[t])throw Object(l.b)("SC20",{index:e})})}if(Object.keys(e).includes("compoundIndexes"))throw Object(l.b)("SC25");Object.keys(Object(d.f)(e)).map(function(e){var t=e.split(".");return t.pop(),t.join(".")}).filter(function(e){return""!==e}).filter(function(e,t,n){return n.indexOf(e)===t}).filter(function(t){return!!s.a.get(e,t).index}).forEach(function(e){throw e=(e=e.replace("properties.","")).replace(/\.properties\./g,"."),Object(l.b)("SC26",{index:Object(d.u)(e)})}),(e.indexes||[]).reduce(function(e,t){return Array.isArray(t)?e.concat(t):e.push(t),e},[]).filter(function(e,t,n){return n.indexOf(e)===t}).map(function(t){var n=C(t),a=s.a.get(e,n);if(!a||"object"!=typeof a)throw Object(l.b)("SC21",{index:t});return{indexPath:t,schemaObj:a}}).filter(function(e){return"string"!==e.schemaObj.type&&"integer"!==e.schemaObj.type&&"number"!==e.schemaObj.type}).forEach(function(e){throw Object(l.b)("SC22",{key:e.indexPath,type:e.schemaObj.type})}),Object.keys(Object(d.f)(e)).map(function(e){var t=e.split(".");return t.pop(),t.join(".")}).filter(function(e){return""!==e&&"attachments"!==e}).filter(function(e,t,n){return n.indexOf(e)===t}).filter(function(t){return!!s.a.get(e,t).encrypted}).forEach(function(e){throw e=(e=e.replace("properties.","")).replace(/\.properties\./g,"."),Object(l.b)("SC27",{index:Object(d.u)(e)})}),e.encrypted&&e.encrypted.forEach(function(t){var n=C(t),a=s.a.get(e,n);if(!a||"object"!=typeof a)throw Object(l.b)("SC28",{field:t})})}function g(e){e&&Object.entries(e).forEach(function(e){var t=e[0],n=e[1];if("string"!=typeof t)throw Object(l.c)("COL14",{name:t});if(t.startsWith("_"))throw Object(l.c)("COL15",{name:t});if("function"!=typeof n)throw Object(l.c)("COL16",{name:t,type:typeof t});if(function(){if(!a){var e=new u.a,t=Object.getOwnPropertyNames(e),n=Object.getOwnPropertyNames(Object.getPrototypeOf(e));a=[].concat(t,n)}return a}().includes(t)||p().includes(t))throw Object(l.b)("COL17",{name:t})})}var x=n("aiWu"),w=n("n+PQ"),j="dev-mode",D={name:j,rxdb:!0,overwritable:{isDevMode:function(){return!0},tunnelErrorMessage:function(e){if(!r[e])throw console.error("RxDB: Error-Code not known: "+e),new Error("Error-Code "+e+" not known, contact the maintainer");return r[e]}},hooks:{preAddRxPlugin:function(e){if(e.plugin.name===j)throw Object(l.b)("DEV1",{plugins:e.plugins})},preCreateRxSchema:O,preCreateRxDatabase:function(e){!function(e){if(Object(w.e)(e.name),Object(d.j)(e.name)&&(e.name.endsWith("/")||e.name.endsWith("\\")))throw Object(l.b)("DB11",{name:e.name})}(e)},preCreateRxCollection:function(e){if(function(e){if(function(){if(!o){var e=new h.a("pseudoInstance","memory"),t=Object.getOwnPropertyNames(e),n=Object.getOwnPropertyNames(Object.getPrototypeOf(e));o=[].concat(t,n),e.destroy()}return o}().includes(e.name))throw Object(l.b)("DB5",{name:e.name})}(e),"_"===e.name.charAt(0))throw Object(l.b)("DB2",{name:e.name});if(!e.schema)throw Object(l.b)("DB4",{name:e.name,args:e})},preCreateRxQuery:function(e){!function(e){if("[object Object]"!==Object.prototype.toString.call(e.queryObj))throw Object(l.c)("QU11",{op:e.op,collection:e.collection.name,queryObj:e.queryObj});var t=["selector","limit","skip","sort"];Object.keys(e.queryObj).forEach(function(n){if(!t.includes(n))throw Object(l.c)("QU11",{op:e.op,collection:e.collection.name,queryObj:e.queryObj,key:n})})}(e)},createRxCollection:function(e){g(e.statics),g(e.methods),g(e.attachments),e.schema&&e.migrationStrategies&&function(e,t){if("object"!=typeof t||Array.isArray(t))throw Object(l.c)("COL11",{schema:e});var n=Object(x.c)(e);if(n.length!==Object.keys(t).length)throw Object(l.b)("COL12",{have:Object.keys(t),should:n});n.map(function(e){return{v:e,s:t[e+1]}}).filter(function(e){return"function"!=typeof e.s}).forEach(function(t){throw Object(l.c)("COL13",{version:t.v,type:typeof t,schema:e})})}(e.schema,e.migrationStrategies)}}}}}]);